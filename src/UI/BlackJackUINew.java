/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Log.Log;
import PlayerInfo.Player;
import PokerDeck.Card;
import PokerGame.BlackJackPlay;
import PokerGame.BlackJackPlayRound;
import PokerGame.BlackJackRule;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JButton;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author Wei
 */
public class BlackJackUINew extends javax.swing.JFrame {

    /**
     * Creates new form BlackJackUINew
     */
    ArrayList<JLabel> AICardList = new ArrayList<JLabel>();
    ArrayList<JLabel> YourCardList = new ArrayList<JLabel>();
    ArrayList<JButton> YourActionList = new ArrayList<JButton>();
    BlackJackPlay game;
    BlackJackPlayRound round;

    public BlackJackUINew() {
        initComponents();
        AICardList.add(jAIcard1);
        AICardList.add(jAIcard2);
        AICardList.add(jAIcard3);
        AICardList.add(jAIcard4);
        AICardList.add(jAIcard5);

        YourCardList.add(jPcard1);
        YourCardList.add(jPcard2);
        YourCardList.add(jPcard3);
        YourCardList.add(jPcard4);
        YourCardList.add(jPcard5);

        YourActionList.add(jHit);
        YourActionList.add(jStand);
        YourActionList.add(jSurrender);
        YourActionList.add(jDouble);
        
         this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jBet = new javax.swing.JTextField();
        jSurrender = new javax.swing.JButton();
        jDouble = new javax.swing.JButton();
        jStand = new javax.swing.JButton();
        jHit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPScore = new javax.swing.JTextField();
        jPMoney = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        AICards = new javax.swing.JPanel();
        jAIcard1 = new javax.swing.JLabel();
        jAIcard2 = new javax.swing.JLabel();
        jAIcard3 = new javax.swing.JLabel();
        jAIcard4 = new javax.swing.JLabel();
        jAIcard5 = new javax.swing.JLabel();
        PlaerCards = new javax.swing.JPanel();
        jPcard1 = new javax.swing.JLabel();
        jPcard2 = new javax.swing.JLabel();
        jPcard3 = new javax.swing.JLabel();
        jPcard4 = new javax.swing.JLabel();
        jPcard5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jAIBlackJack = new javax.swing.JLabel();
        jPBlackJack = new javax.swing.JLabel();
        jAIWin = new javax.swing.JLabel();
        jPWin = new javax.swing.JLabel();
        jNextRound = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jAIScore = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jAIMoney = new javax.swing.JTextField();
        jRound = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(null);

        jPanel2.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Bet:");

        jBet.setEditable(false);
        jBet.setFocusable(false);

        jSurrender.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jSurrender.setText("Surrender");
        jSurrender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSurrenderActionPerformed(evt);
            }
        });

        jDouble.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jDouble.setText("Double");
        jDouble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDoubleActionPerformed(evt);
            }
        });

        jStand.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jStand.setText("Stand");
        jStand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStandActionPerformed(evt);
            }
        });

        jHit.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jHit.setText("Hit");
        jHit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHitActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Player Score:");

        jPScore.setEditable(false);
        jPScore.setFocusable(false);

        jPMoney.setEditable(false);
        jPMoney.setFocusable(false);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Player Money");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jHit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jStand, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jDouble, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jSurrender)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBet, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPScore, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jPMoney))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jHit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStand, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDouble, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSurrender, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBet, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPScore, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 480, 800, 102);

        AICards.setOpaque(false);

        javax.swing.GroupLayout AICardsLayout = new javax.swing.GroupLayout(AICards);
        AICards.setLayout(AICardsLayout);
        AICardsLayout.setHorizontalGroup(
            AICardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AICardsLayout.createSequentialGroup()
                .addComponent(jAIcard1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jAIcard2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jAIcard3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jAIcard4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jAIcard5, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
        );
        AICardsLayout.setVerticalGroup(
            AICardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jAIcard1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jAIcard2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jAIcard3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jAIcard4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jAIcard5, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
        );

        jPanel1.add(AICards);
        AICards.setBounds(170, 120, 477, 90);

        PlaerCards.setOpaque(false);

        javax.swing.GroupLayout PlaerCardsLayout = new javax.swing.GroupLayout(PlaerCards);
        PlaerCards.setLayout(PlaerCardsLayout);
        PlaerCardsLayout.setHorizontalGroup(
            PlaerCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlaerCardsLayout.createSequentialGroup()
                .addComponent(jPcard1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPcard2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPcard3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPcard4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPcard5, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
        );
        PlaerCardsLayout.setVerticalGroup(
            PlaerCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPcard1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPcard2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPcard3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPcard4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPcard5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.add(PlaerCards);
        PlaerCards.setBounds(170, 220, 477, 90);
        PlaerCards.getAccessibleContext().setAccessibleDescription("");

        jPanel5.setOpaque(false);

        jPBlackJack.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        jAIWin.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jAIWin.setText("YOU LOSE!!!");

        jPWin.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPWin.setText("YOU WIN!!!");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPBlackJack, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jAIBlackJack, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jAIWin, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPWin, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jAIWin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jAIBlackJack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPBlackJack, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(jPWin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel1.add(jPanel5);
        jPanel5.setBounds(230, 340, 410, 150);

        jNextRound.setText("Next Round");
        jNextRound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNextRoundActionPerformed(evt);
            }
        });
        jPanel1.add(jNextRound);
        jNextRound.setBounds(680, 390, 100, 23);

        jPanel3.setOpaque(false);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("AI Points:");
        jLabel8.setToolTipText("");
        jLabel8.setFocusable(false);

        jAIScore.setEditable(false);
        jAIScore.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jAIScore.setEnabled(false);
        jAIScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAIScoreActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("AI Money:");
        jLabel5.setFocusable(false);

        jAIMoney.setEditable(false);
        jAIMoney.setFocusable(false);
        jAIMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAIMoneyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jAIMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAIScore, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAIScore, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAIMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel8.getAccessibleContext().setAccessibleName("AI Points:");

        jPanel1.add(jPanel3);
        jPanel3.setBounds(610, 10, 190, 90);

        jRound.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(jRound);
        jRound.setBounds(680, 420, 100, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PokerCardImage/Table.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 800, 590);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void DoSomethingAtBegin() throws MessagingException {
        InitialBoardsBetweenRounds();
        //GameAI
        game = new BlackJackPlay(this);
        try {
            game.GameBegin();

            addWindowListener(new WindowAdapter() {

                public void windowClosing(WindowEvent e) {
                    super.windowClosing(e);
                    CreateRoom createRoom = new CreateRoom();
                    createRoom.setVisible(true);
                    try {
                        Log.getInstance().WriteLog();
                    } catch (IOException ex) {
                        Logger.getLogger(BlackJackUINew.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });

        } catch (InterruptedException ex) {
            Logger.getLogger(BlackJackUINew.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void InitialBoardsBetweenRounds() {

        String strCardPath = "/PokerCardImage/Empty.png";
        ImageIcon icon = new ImageIcon(getClass().getResource(strCardPath));

        for (JLabel jlabel : AICardList) {
            jlabel.setIcon(icon);
        }
        for (JLabel jlabel : YourCardList) {
            jlabel.setIcon(icon);
        }
        //jYourCard4.setIcon(icon);

        jAIBlackJack.setVisible(false);
        jPBlackJack.setVisible(false);
        jAIWin.setVisible(false);
        jPWin.setVisible(false);
        jNextRound.setVisible(false);

        RefreshNumOfPlayerHand();
        HideAIHand();
    }

    public void RefreshMoneyOfBothPlayer() {
        //TODO should get money from DB,
        //dangerous if not modified
        if (game == null) {
            jAIMoney.setText(String.valueOf(1000));
            jPMoney.setText(String.valueOf(1000));
        } else {
            jAIMoney.setText(String.valueOf(game.getAI().getMoney()));
            jPMoney.setText(String.valueOf(game.getPlayer().getMoney()));
        }
    }

    public void RefreshNumOfPlayerHand() {
        if (game != null) {
            Player player = game.getPlayer();
            int nNumber = BlackJackRule.GetMaxValueOfHand(player);
            if (nNumber == -1) {
                jPScore.setText("BUST!!");
            } else {
                jPScore.setText(String.valueOf(nNumber));
            }

        }
    }

    public void AskForNextRound() {
        jNextRound.setVisible(true);
    }

    public void RefreshRoundNumber() {
        jRound.setText("Round " + game.getNumOfRound());
    }

    public void setRoundInfo(BlackJackPlayRound bjPlayRound) {
        round = bjPlayRound;
        RefreshRoundNumber();
    }

    public void GameEndProcedure() throws MessagingException {
        //String strTime = String.valueOf(System.currentTimeMillis());
        //Log.getInstance().Log(1, "Player ID:" + strTime);
        //RefreshLog(Log.getInstance().getLog());

        //JOptionPane.showMessageDialog(this, "Press Ok to Send E-Mail(Takes 20s),Your ID: " + strTime + "\n", "Thanks!", JOptionPane.INFORMATION_MESSAGE);
        //Log.getInstance().MailLog();
        //Log.getInstance().ClearLog();
        // CleanLog();
        //New Game!!!
        DoSomethingAtBegin();
    }

    public void HideAIHand() {
        jAIScore.setText(String.valueOf("0"));
    }

    public void TerminateControlOfPlayer() {
        for (JButton button : YourActionList) {
            button.setEnabled(false);
        }
    }

    public void RestoreControlOfPlayer() {
        for (JButton button : YourActionList) {
            button.setEnabled(true);
        }
    }

    public void RefreshNumOfAIHand() {
        Player player = game.getAI();
        int nNumber = BlackJackRule.GetMaxValueOfHand(player);
        if (nNumber == -1) {
            jAIScore.setText("BUST!!");
        } else {
            jAIScore.setText(String.valueOf(nNumber));
        }
    }

    public void SendCardToPosition(boolean bAI, Card card, int nPosition, boolean bFaceup) {
        if (nPosition > 5 || nPosition < 1) {
            return;
        }

        JLabel jAILabel = new JLabel();
        String cardAddress = "";
        if (!bFaceup) {
            cardAddress = "/PokerCardImage/Back.png";
        }
        switch (nPosition) {
            case 1:
                jAILabel = bAI ? jAIcard1 : jPcard1;
                break;
            case 2:
                jAILabel = bAI ? jAIcard2 : jPcard2;
                break;
            case 3:
                jAILabel = bAI ? jAIcard3 : jPcard3;
                break;
            case 4:
                jAILabel = bAI ? jAIcard4 : jPcard4;
                break;
            case 5:
                jAILabel = bAI ? jAIcard5 : jPcard5;
                break;
            default:
                throw new AssertionError();
        }
        //jAICard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PokerCardImage/cic.png")));
        if (bFaceup) {
            cardAddress = "/PokerCardImage/" + card.getCardNameFromPNG() + ".png";
        }

        jAILabel.setIcon(
                new javax.swing.ImageIcon(getClass().getResource(cardAddress)));
    }

    public void setBet(int nBet) {
        jBet.setText(String.valueOf(nBet));
    }

    public void RefreshWhenAIWin() {
        jAIWin.setVisible(true);
        SendCardToPosition(true, game.getAI().getHiddenCard(), 1, true);

        RefreshNumOfAIHand();
        RefreshMoneyOfBothPlayer();
    }

    public void RefreshWhenYouWin() {
        jPWin.setVisible(true);
        SendCardToPosition(true, game.getAI().getHiddenCard(), 1, true);

        RefreshNumOfAIHand();
        RefreshMoneyOfBothPlayer();
    }

    public void DisableDouble() {
        jDouble.setEnabled(false);
    }

    public void DisableSurrender() {
        jSurrender.setEnabled(false);
    }

    public void DisableStand() {
        jStand.setEnabled(false);
    }


    private void jAIScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAIScoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAIScoreActionPerformed

    private void jHitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHitActionPerformed
        // TODO add your handling code here:
        if (round == null) {
            return;
        }
        if (round.isPlayerPhase()) {
            if (game.getPlayer().AmIDouble()) {
                //GetOneCardAndStand
                round.PlayerHit();
                //Should not do this, but I am lazy.
                jStandActionPerformed(null);
                return;
            }

            if (!BlackJackRule.AmIBust(game.getPlayer())) {
                round.PlayerHit();
                DisableDouble();
                DisableSurrender();
                //Check GameStatus
                if (BlackJackRule.AmIBust(game.getPlayer())) {
                    //Should not do this, but I am lazy.
                    jStandActionPerformed(null);
                }
                if (BlackJackRule.AmIFiveDragon(game.getPlayer())) {
                    //Should not do this, but I am lazy.
                    jStandActionPerformed(null);
                }
            }
        }
    }//GEN-LAST:event_jHitActionPerformed

    private void jAIMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAIMoneyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAIMoneyActionPerformed

    private void jNextRoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNextRoundActionPerformed
        // TODO add your handling code here:

        try {
            InitialBoardsBetweenRounds();
            game.PlayNewRound();

        } catch (InterruptedException ex) {
            Logger.getLogger(BlackJackUINew.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MessagingException ex) {
            Logger.getLogger(BlackJackUINew.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jNextRoundActionPerformed

    private void jStandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStandActionPerformed
        if (BlackJackRule.AmIBust(game.getPlayer())) {
            //Player Bust! Round End!
            round.RoundEndByPlayer();
        }

        if (round.isPlayerPhase()) {
            TerminateControlOfPlayer();
            round.AIPhase();
        }
    }//GEN-LAST:event_jStandActionPerformed

    private void jSurrenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSurrenderActionPerformed

        round.HalfMoneyOfRound();
        round.RoundEnd(100);
    }//GEN-LAST:event_jSurrenderActionPerformed

    private void jDoubleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDoubleActionPerformed
        // TODO add your handling code here:
        round.DoubleMoneyOfRound();
        game.getPlayer().doDouble(true);
        DisableDouble();
        DisableSurrender();
        DisableStand();
    }//GEN-LAST:event_jDoubleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlackJackUINew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlackJackUINew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlackJackUINew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlackJackUINew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BlackJackUINew ui = new BlackJackUINew();
                ui.setVisible(true);
                try {
                    ui.DoSomethingAtBegin();
                } catch (MessagingException ex) {
                    Logger.getLogger(BlackJackUINew.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AICards;
    private javax.swing.JPanel PlaerCards;
    private javax.swing.JLabel jAIBlackJack;
    private javax.swing.JTextField jAIMoney;
    private javax.swing.JTextField jAIScore;
    private javax.swing.JLabel jAIWin;
    private javax.swing.JLabel jAIcard1;
    private javax.swing.JLabel jAIcard2;
    private javax.swing.JLabel jAIcard3;
    private javax.swing.JLabel jAIcard4;
    private javax.swing.JLabel jAIcard5;
    private javax.swing.JTextField jBet;
    private javax.swing.JButton jDouble;
    private javax.swing.JButton jHit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton jNextRound;
    private javax.swing.JLabel jPBlackJack;
    private javax.swing.JTextField jPMoney;
    private javax.swing.JTextField jPScore;
    private javax.swing.JLabel jPWin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel jPcard1;
    private javax.swing.JLabel jPcard2;
    private javax.swing.JLabel jPcard3;
    private javax.swing.JLabel jPcard4;
    private javax.swing.JLabel jPcard5;
    private javax.swing.JLabel jRound;
    private javax.swing.JButton jStand;
    private javax.swing.JButton jSurrender;
    // End of variables declaration//GEN-END:variables
}
